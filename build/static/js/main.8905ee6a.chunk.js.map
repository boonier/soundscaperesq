{"version":3,"sources":["components/Scaper/styles.js","components/nexusui/NSlider/index.js","components/nexusui/NRadioButtons/index.js","components/Scaper/ToggleButton.js","components/tonejs/DubDelay.js","components/tonejs/RingMod.js","components/Scaper/index.js","App.js","index.js"],"names":["ScaperContainer","styled","div","_templateObject","_taggedTemplateLiteral","ScaperControlsSection","section","_templateObject2","ScaperControlsTitle","h2","_templateObject3","ScaperControlsSubTitle","h3","_templateObject4","NSliderContainer","Inner","Label","NSlider","_ref","labelText","onSliderChange","value","logScale","totalWidth","props","React","createElement","Slider","Object","assign","size","onChange","Number","Math","pow","NRadioContainer","NRadioLabelsContainer","NRadioButtons","onRadioChange","active","RadioButton","numberOfButtons","TogBut","button","ToggleButton","isToggled","states","DubDelay","Tone","Effect","constructor","freq","super","this","filtFreq","filterNode","Filter","frequency","type","delayNode","Delay","maxDelay","delayTime","feedbackNode","Gain","connect","effectSend","chain","effectReturn","val","rampTo","feedback","gain","RingMod","ringOsc","Oscillator","multNode","Multiply","start","carrFreq","modWave","console","log","Scaper","source","loop","rate","amp","delayFeedback","delayMix","filterFreq","ringModFreq","containerRef","useRef","playerNode","Player","current","volumeNode","dubDelayNode","ringModNode","Master","state","setState","useState","storedRate","storedAmp","storedDelayFeedback","storedDelayTime","storedDelayMix","storedFilterFreq","storedFilterRes","storedRingModFreq","storedRingModWave","isPlaying","onControlChange","useCallback","memoize","control","updateState","prevState","[object Object]","useEffect","playbackRate","Q","wet","containerWidth","setContainerWidth","buffer","disconnect","clientWidth","stop","ref","onClick","onPlayChange","min","max","Toggle","paths","fallout","dynamite","drone","Scapers","App","buffersLoaded","setBuffersLoaded","sounds","Buffers","className","get","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8905ee6a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ScaperContainer = styled.div`\n  display: block;\n  border: 2px solid #ddd;\n  padding: 8px;\n`;\n\nexport const ScaperControlsSection = styled.section`\n  border-bottom: 1px solid #ddd;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  &:last-child {\n    border: none;\n    padding-bottom: 0px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const ScaperControlsTitle = styled.h2`\n  font-weight: bold;\n  font-size: 13px;\n`;\n\nexport const ScaperControlsSubTitle = styled.h3`\n  font-weight: bold;\n  font-size: 11px;\n  color: #848484;\n`;\n","import React from 'react';\nimport { Slider, Number } from 'react-nexusui';\nimport styled from 'styled-components';\n\nconst NSliderContainer = styled.div`\n  margin: 10px 0;\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  font-size: 11px;\n`;\n\nexport default function NSlider({\n  labelText,\n  onSliderChange,\n  value,\n  logScale,\n  totalWidth,\n  ...props\n}) {\n  // console.log('rendering NSlider');\n\n  return (\n    <NSliderContainer>\n      <Label>{labelText}</Label>\n      <Inner>\n        <Slider\n          size={[totalWidth * 0.8, 14]}\n          value={value}\n          onChange={onSliderChange}\n          {...props}\n        />\n        <Number\n          value={logScale ? Math.pow(value, 2) : value}\n          size={[totalWidth * 0.15, 22]}\n          {...props}\n        />\n      </Inner>\n    </NSliderContainer>\n  );\n}\n","import React from 'react';\nimport { RadioButton } from 'react-nexusui';\nimport styled from 'styled-components';\n\nconst NRadioContainer = styled.div`\n  margin: 10px 0;\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  font-size: 11px;\n  margin-top: 3px;\n`;\n\nconst NRadioLabelsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 160px;\n`;\n\nexport default function NRadioButtons({\n  labelText,\n  onRadioChange,\n  active,\n  logScale,\n  totalWidth,\n  ...props\n}) {\n  // console.log(active);\n\n  return (\n    <NRadioContainer>\n      <RadioButton\n        size={[160, 13]}\n        numberOfButtons={4}\n        active={-1}\n        onChange={onRadioChange}\n        active={active}\n      />\n      <NRadioLabelsContainer>\n        <Label>Sin</Label>\n        <Label>Sqr</Label>\n        <Label>Tri</Label>\n        <Label>Saw</Label>\n      </NRadioLabelsContainer>\n    </NRadioContainer>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TogBut = styled.button`\n  background-color: #2bb;\n  display: inline-block;\n  border: none;\n  padding: 0.7rem 1.5rem;\n  margin: 0;\n  text-decoration: none;\n  color: #ffffff;\n  font-family: sans-serif;\n  font-size: 1rem;\n  cursor: pointer;\n  text-align: center;\n  transition: background 250ms ease-in-out, transform 150ms ease;\n  appearance: none;\n  border-radius: 8px;\n\n  &:hover {\n    background: #0053ba;\n  }\n\n  /* &:focus {\n    outline: 1px solid #fff;\n    outline-offset: -4px;\n  } */\n\n  &:active {\n    transform: scale(0.96);\n  }\n`;\n\nexport default function ToggleButton({ isToggled, states, ...props }) {\n  return <TogBut {...props}>{isToggled ? states[1] : states[0]}</TogBut>;\n}\n","import Tone from 'tone';\n\nexport default class DubDelay extends Tone.Effect {\n  constructor(freq) {\n    super();\n    this.filtFreq = 800;\n    this.filterNode = new Tone.Filter({\n      frequency: this.filtFreq,\n      type: 'lowpass',\n    });\n    this.delayNode = new Tone.Delay({ maxDelay: 1, delayTime: 0.2 });\n    this.feedbackNode = new Tone.Gain(0.7);\n    this.delayNode.connect(this.feedbackNode);\n    this.feedbackNode.connect(this.filterNode);\n    this.filterNode.connect(this.delayNode);\n    this.effectSend.chain(this.delayNode, this.effectReturn);\n  }\n\n  delayTime(val) {\n    this.delayNode.delayTime.rampTo(val, 0.2);\n  }\n\n  feedback(val) {\n    this.feedbackNode.gain.rampTo(val, 0.2);\n  }\n}\n","import Tone from 'tone';\n\nexport default class RingMod extends Tone.Effect {\n  constructor() {\n    super();\n    // Gain no\n    // this.gainNode = new Tone.Gain();\n    this.ringOsc = new Tone.Oscillator({ frequency: 800, type: 'sine' });\n    this.multNode = new Tone.Multiply();\n    this.ringOsc.start();\n\n    this.ringOsc.connect(this.multNode, 0, 1);\n    this.effectSend.chain(this.multNode, this.effectReturn);\n  }\n\n  carrFreq(val) {\n    this.ringOsc.frequency.rampTo(val, 0.2);\n  }\n\n  modWave(val) {\n    let type = 'sine';\n    switch (val) {\n      case 1:\n        type = 'square';\n        break;\n      case 2:\n        type = 'triangle';\n        break;\n      case 3:\n        type = 'sawtooth';\n        break;\n      default:\n        type = 'sine';\n    }\n\n    console.log('type', type);\n\n    this.ringOsc.type = type;\n  }\n}\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Tone from 'tone';\nimport {\n  ScaperContainer,\n  ScaperControlsSection,\n  ScaperControlsTitle,\n  ScaperControlsSubTitle,\n} from './styles';\nimport NSlider from '../nexusui/NSlider';\nimport NRadioButtons from '../nexusui/NRadioButtons';\n\nimport { Toggle, RadioButton } from 'react-nexusui';\nimport ToggleButton from './ToggleButton';\n\nimport DubDelay from '../tonejs/DubDelay';\nimport RingMod from '../tonejs/RingMod';\nimport memoize from 'fast-memoize';\n\nexport default function Scaper({\n  source,\n  loop,\n  rate = 1,\n  amp = 1,\n  delayFeedback = 0.5,\n  delayTime = 0.25,\n  delayMix = 0.5,\n  filterFreq = 1000,\n  ringModFreq = 200,\n}) {\n  const containerRef = useRef(null);\n  const playerNode = useRef(new Tone.Player()).current;\n  const volumeNode = useRef(new Tone.Gain()).current;\n  const dubDelayNode = useRef(new DubDelay()).current;\n  const ringModNode = useRef(new RingMod()).current;\n  const filterNode = useRef(new Tone.Filter({ type: 'highpass' })).current;\n\n  // console.log(ringModNode);\n\n  playerNode.chain(\n    volumeNode,\n    ringModNode,\n    dubDelayNode,\n    filterNode,\n    Tone.Master\n  );\n\n  const [state, setState] = useState({\n    storedRate: rate,\n    storedAmp: amp,\n    storedDelayFeedback: delayFeedback,\n    storedDelayTime: delayTime,\n    storedDelayMix: delayMix,\n    storedFilterFreq: filterFreq,\n    storedFilterRes: 0,\n    storedRingModFreq: ringModFreq,\n    storedRingModWave: 0,\n    isPlaying: false,\n  });\n\n  const onControlChange = useCallback(\n    memoize(control => val => updateState(control, val)),\n    []\n  );\n\n  const updateState = (control, val) => {\n    setState(prevState => ({\n      ...prevState,\n      [control]: val,\n    }));\n  };\n\n  useEffect(() => {\n    playerNode.playbackRate = state.storedRate;\n  }, [state.storedRate]);\n\n  useEffect(() => {\n    volumeNode.gain.rampTo(Math.pow(state.storedAmp, 2), 0.2);\n  }, [state.storedAmp]);\n\n  useEffect(() => {\n    ringModNode.carrFreq(state.storedRingModFreq);\n  }, [state.storedRingModFreq]);\n\n  useEffect(() => {\n    ringModNode.modWave(state.storedRingModWave);\n  }, [state.storedRingModWave]);\n\n  // FILTER\n  useEffect(() => {\n    filterNode.frequency.rampTo(state.storedFilterFreq, 0.2);\n  }, [state.storedFilterFreq]);\n\n  useEffect(() => {\n    filterNode.Q.rampTo(state.storedFilterRes, 0.2);\n  }, [state.storedFilterRes]);\n\n  // FEEDBACK\n  useEffect(() => {\n    dubDelayNode.feedback(state.storedDelayFeedback);\n  }, [state.storedDelayFeedback]);\n\n  // DELAY TIME\n  useEffect(() => {\n    dubDelayNode.delayTime(state.storedDelayTime);\n  }, [state.storedDelayTime]);\n\n  // DELAY TIME\n  useEffect(() => {\n    dubDelayNode.wet.rampTo(state.storedDelayMix, 0.2);\n  }, [state.storedDelayMix]);\n\n  const [containerWidth, setContainerWidth] = useState(200);\n\n  useEffect(() => {\n    // playerNode.load(source, player =>\n    //   console.log(player.buffer.length, player.buffer.length / 200)\n    // );\n    playerNode.buffer = source;\n    playerNode.loop = loop;\n    playerNode.playbackRate = rate;\n\n    return function () {\n      playerNode.disconnect();\n      volumeNode.disconnect();\n      dubDelayNode.disconnect();\n      filterNode.disconnect();\n      ringModNode.disconnect();\n    };\n  }, []);\n\n  useEffect(() => setContainerWidth(containerRef.current.clientWidth), [\n    containerWidth,\n  ]);\n\n  const onPlayChange = () => {\n    setState(state => ({\n      ...state,\n      isPlaying: !state.isPlaying,\n    }));\n  };\n  useEffect(() => {\n    state.isPlaying ? playerNode.start() : playerNode.stop();\n  }, [state.isPlaying]);\n\n  return (\n    <ScaperContainer>\n      <div ref={containerRef}>\n        <ScaperControlsSection>\n          <ScaperControlsTitle>FILE VIEW</ScaperControlsTitle>\n        </ScaperControlsSection>\n\n        <ScaperControlsSection>\n          {/* <ScaperControlsTitle>MAIN CONTROLS</ScaperControlsTitle> */}\n          <ToggleButton\n            states={['Start', 'Stop']}\n            isToggled={state.isPlaying}\n            onClick={onPlayChange}\n          />\n          <NSlider\n            // onSliderChange={onControlChange}\n            onSliderChange={onControlChange('storedRate')}\n            value={state.storedRate}\n            labelText=\"Rate\"\n            min={0}\n            max={2}\n            totalWidth={containerWidth}\n          />\n          <NSlider\n            // onSliderChange={val => onControlChange(val)}\n            onSliderChange={onControlChange('storedAmp')}\n            value={state.storedAmp}\n            labelText=\"Amplitude\"\n            min={0}\n            max={1}\n            totalWidth={containerWidth}\n            logScale\n          />\n        </ScaperControlsSection>\n\n        <ScaperControlsSection>\n          <ScaperControlsTitle>OSCILLATOR</ScaperControlsTitle>\n          <ScaperControlsSubTitle>RING MODULATOR</ScaperControlsSubTitle>\n          <NSlider\n            onSliderChange={onControlChange('storedRingModFreq')}\n            value={state.storedRingModFreq}\n            labelText=\"Frequency\"\n            min={50}\n            max={2000}\n            totalWidth={containerWidth}\n          />\n          <NRadioButtons\n            onRadioChange={onControlChange('storedRingModWave')}\n            active={state.storedRingModWave}\n            totalWidth={containerWidth}\n          />\n          {/* <RadioButton size={[160, 13]} numberOfButtons={4} active={-1} /> */}\n          {/* <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-around',\n              width: '160px',\n              fontSize: '11px',\n            }}\n          >\n            <span>Sin</span>\n            <span>Tri</span>\n            <span>Sqr</span>\n            <span>Saw</span>\n          </div> */}\n          {/* <NSlider\n            // onSliderChange={val => onControlChange(val)}\n            onSliderChange={onAmpChange}\n            value={state.storedAmp}\n            labelText=\"Mix\"\n            min={0}\n            max={1}\n            totalWidth={containerWidth}\n            logScale\n          /> */}\n        </ScaperControlsSection>\n\n        <ScaperControlsSection>\n          <ScaperControlsTitle>FILTER</ScaperControlsTitle>\n          <Toggle size={[20, 22]} />\n          [FILTER TYPE]\n          <NSlider\n            onSliderChange={onControlChange('storedFilterFreq')}\n            value={state.storedFilterFreq}\n            labelText=\"Frequency\"\n            min={20}\n            max={20000}\n            totalWidth={containerWidth}\n            // logScale\n          />\n          <NSlider\n            onSliderChange={onControlChange('storedFilterRes')}\n            value={state.storedFilterRes}\n            labelText=\"Resonance\"\n            min={0}\n            max={100}\n            totalWidth={containerWidth}\n            // logScale\n          />\n        </ScaperControlsSection>\n\n        <ScaperControlsSection>\n          <ScaperControlsTitle>EFFECTS</ScaperControlsTitle>\n          <NSlider\n            onSliderChange={onControlChange('storedDelayTime')}\n            value={state.storedDelayTime}\n            labelText=\"Delay time\"\n            min={0}\n            max={2}\n            totalWidth={containerWidth}\n          />\n          <NSlider\n            onSliderChange={onControlChange('storedDelayFeedback')}\n            value={state.storedDelayFeedback}\n            labelText=\"Feedback\"\n            min={0}\n            max={1}\n            totalWidth={containerWidth}\n          />\n          <NSlider\n            onSliderChange={onControlChange('storedDelayMix')}\n            value={state.storedDelayMix}\n            labelText=\"Mix\"\n            min={0}\n            max={1}\n            totalWidth={containerWidth}\n          />\n        </ScaperControlsSection>\n      </div>\n    </ScaperContainer>\n  );\n  // }, [storedRate]);\n}\n","import React, { useRef, useState } from 'react';\nimport Tone from 'tone';\nimport './styles.css';\nimport styled from 'styled-components';\nimport Scaper from './components/Scaper';\n\nconst paths = {\n  fallout:\n    'https://res.cloudinary.com/boonier/video/upload/v1590514578/soundscaperesq/fallout.wav',\n  dynamite:\n    'https://res.cloudinary.com/boonier/video/upload/v1590514555/soundscaperesq/dynamite.wav',\n  drone:\n    'https://res.cloudinary.com/boonier/video/upload/v1590514554/soundscaperesq/drone.wav',\n};\n\nconst Scapers = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n`;\n\nexport default function App() {\n  const [buffersLoaded, setBuffersLoaded] = useState(false);\n  const sounds = useRef(new Tone.Buffers(paths, () => setBuffersLoaded(true)))\n    .current;\n\n  return (\n    <div className=\"App\">\n      <h1>SoundScaperesq v0.1.0</h1>\n      {buffersLoaded ? (\n        <Scapers>\n          <Scaper\n            source={sounds.get('dynamite')}\n            amp={1}\n            rate={1}\n            delayMix={0.2}\n            loop\n          />\n          <Scaper source={sounds.get('drone')} amp={0.4} loop />\n          <Scaper source={sounds.get('fallout')} rate={0.5} loop />\n        </Scapers>\n      ) : (\n        <div>Loading sounds...</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}